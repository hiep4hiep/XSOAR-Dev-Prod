comment: "This enables to color the field according to the magnitude. The scale is
  \n1-3 green\n4-7 yellow\n8-10 red"
commonfields:
  id: QRadarMagnitude
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 2.1.34
    packID: QRadar
    packPropagationLabels:
    - all
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.9.7.24076
enabled: true
engineinfo: {}
mainengineinfo: {}
name: QRadarMagnitude
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('QRadarMagnitude', 'start', __line__())




  def main():
      try:
          incident = demisto.incident()
          magnitude = incident.get('CustomFields', {}).get('magnitudeoffense', 0)  # define which incident field to use

          if 8 <= magnitude <= 10:
              magnitude = str(magnitude)
              html = "<h1 style='color:#D13C3C;text-align:center;'>" + magnitude + "</h1>"

          elif 4 <= magnitude <= 7:
              magnitude = str(magnitude)
              html = "<h1 style='color:#D17D00;text-align:center;'>" + magnitude + "</h1>"

          else:
              magnitude = str(magnitude)
              html = "<h1 style='color:#1DB846;text-align:center;'>" + magnitude + "</h1>"

          return {
              'ContentsFormat': formats['html'],
              'Type': entryTypes['note'],
              'Contents': html
          }

      except Exception as exp:
          return_error('could not parse QRadar assets', error=exp)


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      return_results(main())

  register_module_line('QRadarMagnitude', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- dynamic-section
type: python
