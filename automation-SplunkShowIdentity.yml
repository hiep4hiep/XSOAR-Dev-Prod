comment: Automation to display identity objects from Splunk.
commonfields:
  id: SplunkShowIdentity
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 2.3.5
    packID: SplunkPy
    packPropagationLabels:
    - all
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.9.7.24076
enabled: true
engineinfo: {}
mainengineinfo: {}
name: SplunkShowIdentity
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('SplunkShowIdentity', 'start', __line__())
  import json





  def main():
      incident = demisto.incident()
      if not incident:
          raise ValueError("Error - demisto.incident() expected to return current incident "
                           "from context but returned None")
      custom_fields = incident.get('CustomFields', {})
      identity_results_str = custom_fields.get('identitytable', {})
      is_successful = custom_fields.get('successfulidentityenrichment', '')
      if is_successful == 'false':
          return CommandResults(readable_output='Identity enrichment failed.')

      identity_results = json.loads(identity_results_str)

      if not identity_results:
          return CommandResults(readable_output='No users were found in the notable.')

      if isinstance(identity_results, list):
          events_arr = []
          for event in identity_results:
              events_arr.append(event)
          markdown = tableToMarkdown("", events_arr, headers=events_arr[0].keys())

      else:
          markdown = tableToMarkdown("", identity_results)

      return {'ContentsFormat': formats['markdown'], 'Type': entryTypes['note'], 'Contents': markdown}


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      try:
          return_results(main())
      except Exception as e:
          return_error(f'Got an error while parsing Splunk events: {e}', error=e)

  register_module_line('SplunkShowIdentity', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- dynamic-section
type: python
