category: Utilities
commonfields:
  id: Zip Password
  version: -1
configuration:
- display: Zip Password
  name: password
  required: true
  type: 4
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    propagationLabels: []
    toServerVersion: ""
description: This is the integration which stores the password for zip utility.
detaileddescription: "Configure this integration with password parameter. This is
  the password you will use for zip or any other function. \nThe get-password command
  will return the base64 string of this password."
display: Zip Password
name: Zip Password
script:
  commands:
  - arguments: []
    description: Run this command without any argument, it will return the base64
      encoded password to the context
    name: get-password
  dockerimage: demisto/python3:3.9.7.24076
  runonce: false
  script: |
    import base64

    def get_password(password):
        password_bytes = password.encode("ascii")
        password_base64_string = base64.b64encode(password_bytes).decode("ascii")

        password_result = CommandResults(
                outputs={"passwd": password_base64_string},
            )
        return_results(password_result)

    def main() -> None:

        password = demisto.params().get('password')

        demisto.debug(f'Command being called is {demisto.command()}')

        if demisto.command() == 'test-module':
            return_results('ok')

        elif demisto.command() == 'get-password':
            get_password(password)



    ''' ENTRY POINT '''

    if __name__ in ('__main__', '__builtin__', 'builtins'):
        main()
  subtype: python3
  type: python
